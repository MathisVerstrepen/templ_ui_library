// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.747
package ui

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func getTextColor(color string, variant string) string {
	textColors := map[string]string{
		"yellow": "text-[#FFD700]",
		"orange": "text-[#FF6F00]",
		"red":    "text-[#B90E0A]",
		"purple": "text-[#7338A0]",
		"blue":   "text-[#2A6199]",
		"green":  "text-[#028A0F]",
	}

	if variant == "solid" {
		return "text-white"
	}

	return textColors[color]
}

func getVariantClasses(variant string, hover bool) string {
	variantClasses := map[string]string{
		"plain":    "bg-opacity-0",
		"outlined": "bg-opacity-0 border",
		"soft":     "bg-opacity-5",
		"solid":    "bg-opacity-100 text-white",
	}
	if hover {
		variantClasses = map[string]string{
			"plain":    "bg-opacity-0 hover:font-bold",
			"outlined": "bg-opacity-0 border hover:bg-opacity-5",
			"soft":     "bg-opacity-5 hover:bg-opacity-10",
			"solid":    "bg-opacity-100 text-white hover:bg-opacity-90",
		}
	}

	return variantClasses[variant]
}

func getColorClasses(color string) string {
	colorClasses := map[string]string{
		"yellow": "bg-[#FFD700] border-[#FFD700]",
		"orange": "bg-[#FF6F00] border-[#FF6F00]",
		"red":    "bg-[#B90E0A] border-[#B90E0A]",
		"purple": "bg-[#7338A0] border-[#7338A0]",
		"blue":   "bg-[#2A6199] border-[#2A6199]",
		"green":  "bg-[#028A0F] border-[#028A0F]",
	}

	return colorClasses[color]
}

func core() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		return templ_7745c5c3_Err
	})
}
