package ui

import (
    "github.com/MathisVerstrepen/templ_ui_library/models"
)

templ Chip(data models.Chip) {
    @chipWrapper(data, chipContent(data))
}

templ chipContent(data models.Chip) {
    { data.Text }
}

templ chipWrapper(data models.Chip, button templ.Component) {
    <div 
        class={ getChipClasses(data) }
        { addAttributes(data.HTML)... }
        { addAttributes(data.HTMX)... }
    >
        @button
    </div>
}


func getChipClasses(data models.Chip) string {
    baseClass := "flex items-center justify-center gap-2 w-fit h-fit rounded-full font-semibold"

    sizeClasses := map[string]string{
        "sm": "px-3 py-1 text-xs",
        "md": "px-5 py-[6px] text-sm",
        "lg": "px-8 py-[8px]",
    }
    if data.Size == "" {
        data.Size = "md"
    }
    if data.Variant == "" {
        data.Variant = "soft"
    }
    if data.Color == "" {
        data.Color = "grey"
    }
    if data.Opacity == "" {
        data.Opacity = "10"
    }

    return baseClass + " " + 
        getVariantClasses(data.Variant, false, data.Opacity) + " " + 
        sizeClasses[data.Size] + " " + 
        getColorClasses(data.Color) + " " + 
        getTextColor(data.Color, data.Variant) + " " +
        getOpacityClasses(data.Variant, data.Opacity)
}